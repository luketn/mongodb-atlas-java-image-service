name: image-service-ci
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/image-service.yml'
      - 'image-service/src/**'
      - 'image-service/pom.xml'
      - 'image-service/*.sh'

jobs:
  ci:
    defaults:
      run:
        working-directory: image-service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'maven'
          cache-dependency-path: 'image-service/pom.xml'
      - name: Run Tests
        run: mvn --quiet test
      - name: Set up QEMU (for linux/arm64 platform build support)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Install Node and CI Dependencies (for Serverless)
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install Serverless
        run: npm ci
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: image-service
          ATLAS_CONNECTION_STRING: ${{ secrets.ATLAS_CONNECTION_STRING }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: ./build-deploy.sh

